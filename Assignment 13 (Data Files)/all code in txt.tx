//1.WAP to write “Purwanchal Campus” to a file, read the content from the file and display it on the screen.
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int main(){
    FILE *ptr;
    char ch;

    ptr = fopen("file.txt","w");
    if(ptr == NULL){
        printf("Error...");
        exit(1);
    }
    printf("Enter the string (use ctrl+D for EOF):\n");
    while((ch=getchar())!=EOF)
    fputc(ch,ptr);
    fclose(ptr);
    ptr = fopen("file.txt","r");
    while((ch = fgetc(ptr)) != EOF)
    printf("%c",ch);
    fclose(ptr);

    return 0;
}

//2.WAP to read numbers from a file and write even, odd to separate file.
#include<stdio.h>
#include<stdlib.h>

int main(){
  FILE *all = fopen("numbers.txt","w");
  int n;
  if(all == NULL){
        printf("Error...");
        exit(1);
    }
  printf("Enter the numbers with space (enter -1 to exit) : \n");
  while (n >= 0){
    scanf("%d", &n);
    putw(n, all);
  }
  fclose(all);
  FILE *odd = fopen("odd.txt","w"), *even = fopen("even.txt","w");
  all = fopen("numbers.txt","r");
  while((n = getw(all)) != EOF){
    if((n%2)==0)
    putw(n,even);
    else
    putw(n,odd);
  }
  fclose(all);
  fclose(odd);
  fclose(even);
  odd  = fopen("odd.txt","r");
  even = fopen("even.txt","r");
  printf("The odd numbers are : ");
  while((n=getw(odd)) != EOF)
  printf("%d  ",n);
  printf("\nThe even numbers are : ");
  while((n=getw(even)) != EOF)
  printf("%d  ",n);
  
  return 0;
}

//3.WAP to merge two file to third file.
#include <stdio.h>
#include <stdlib.h>
  
int main()
{
   // Open two files to be merged
   FILE *fp1 = fopen("file1.txt", "r");
   FILE *fp2 = fopen("file2.txt", "r");
  
   // Open file to store the result
   FILE *fp3 = fopen("file3.txt", "w");
   char c;
  
   if (fp1 == NULL || fp2 == NULL || fp3 == NULL)
   {
         puts("Could not open files");
         exit(0);
   }
  printf("Enter the string for file 1(use ctrl+D for EOF) :\n");
   while ((c = getchar()) != EOF)
      fputc(c, fp3);
  printf("Enter the string for file 2 (use ctrl+D for EOF):\n");
   while ((c = getchar()) != EOF)
      fputc(c, fp3);
  
   printf("Merged file1.txt and file2.txt into file3.txt\n\n");
  
   fclose(fp1);
   fclose(fp2);
   fclose(fp3);
   fp3 = fopen("file3.txt","r");
   while((c = fgetc(fp3)) != EOF)
   printf("%c",c);
   return 0;
}

//4.WAP to copy a content of one file to another file.
#include<stdio.h>
#include<stdlib.h>

int main(){
    FILE *f1, *f2;
    char ch;

    f1 = fopen("file.txt","w");
    f2 = fopen("copy.txt","w");
    if(f1 == NULL || f2 == NULL){
        printf("Error...");
        exit(1);
    }
    printf("Enter the string (use ctrl+D for EOF):\n");
    while((ch=getchar())!=EOF)
    fputc(ch,f1);
    fclose(f1);
    f1 = fopen("file.txt","r");
    while((ch = fgetc(f1)) != EOF)
    putc(ch,f2);
    fclose(f2);
    printf("\nThe copied string is : \n");
    f2 = fopen("copy.txt","r");
    while((ch = fgetc(f2)) != EOF)
    printf("%c",ch);
    fclose(f2);

    return 0;
}


//5.WAP to count characters, words and lines in a text file.
#include <stdio.h>

int main() {
  FILE *f1 = fopen("sample1.txt", "r");
  char ch;
  int chara=0, word=0, lines=0;
  if (f1 == NULL) {
    printf("Error!");
    return 1;
  }

  printf("The Text is :\n");
  f1 = fopen("sample1.txt", "r");
  while((ch = fgetc(f1)) != EOF){
    if(ch != ' ') chara++;
    if(ch == ' ') word++;
    if(ch == '\n') lines++;
    putchar(ch);
  }
  fclose(f1);

  printf("\nThere are %d characters, %d word and %d lines.\n", chara-2, word, lines);

  return 0;
}


//6.WAP to write name, roll no and age of five students into a disk filename “STUDENT.DAT”.
#include <stdio.h>

struct student {
  char name[20];
  int roll;
  int age;
} details ;

int main() {
  FILE *dat = fopen("STUDENT.DAT", "w");
  int roll, age;
  char name[20];

  if (dat == NULL) {
    printf("Error!");
    return 1;
  }

  for (int i=0; i<5; i++) {
    printf("\nStudent %c\n", i+65);
    printf("Enter Name:");
    scanf("%s", details.name);
    printf("Enter Roll:");
    scanf(" %d", &details.roll);
    printf("Enter Age:");
    scanf(" %d", &details.age);
    fprintf(dat,"%s %d %d", details.name, details.roll, details.age);
  }
  fclose(dat);

  dat = fopen("STUDENT.DAT", "r");
  printf("\nNo.\tName\tRoll\tAge\n");
  int i=0;
  while (fscanf(dat, "%s%d%d", details.name, &details.roll, &details.age) != EOF) {
    printf("%d\t%s\t%d\t%d\n", i+1, details.name, details.roll, details.age);
    i++;
  }
  fclose(dat);

  return 0;
}


/*7.WAP to read to store Employees(id, name, address, salary) detail in a text file.
  Read data fromthe text file, sort them in ascending order of salary and store the sorted
  record in a binary file. Display the details of all employees.
*/
#include<stdio.h>
#include<stdlib.h>

struct employee{
  char name[20], address[20];
  int id;
  int salary;
}e1[10],temp;
int main(){
  FILE *ptr = fopen("employee.txt","w");
  int n, i, j;
  char c;
  if(ptr == NULL)
 {
  printf("File error!");
  exit(1);
 }
  printf("Enter the value of record's you want to add (max 10) : ");
  scanf("%d",&n);
  for(i=0;i<n;i++){
    printf("Employee %d\n",i+1);
    printf("Enter the employee's id : ");
    scanf("%d",&e1[i].id);
    printf("Enter the employee's name : ");
    scanf("%s",e1[i].name);
    printf("Enter the employee's address : ");
    scanf("%s",e1[i].address);
    printf("Enter the employee's salary : ");
    scanf("%d",&e1[i].salary);
    fprintf(ptr,"%d\n%s\n%s\n%d\n",e1[i].id,e1[i].name,e1[i].address,e1[i].salary);
  }
  fclose(ptr);
   /* Reading file in binary read mode */
 ptr = fopen("employee.txt","r");
 if(ptr == NULL)
 {
  printf("File error!");
  exit(1);
 }

 /* Sorting */
 for(i=0;i< n-1;i++)
 {
  for(j=i+1;j< n;j++)
  {
   if(e1[i].salary>e1[j].salary)
   {
    temp = e1[i];
    e1[i] = e1[j];
    e1[j] = temp;
   }
  }
 }
 i=0;
 /* Displaying sorted list */
 while(fscanf(ptr,"%d\n%s\n%s\n%d\n",&e1[i].id,e1[i].name,e1[i].address,&e1[i].salary) != EOF)
 {
    printf("Id = %d\tName = %s\tAddress = %s\tSalary = %d\n",e1[i].id, e1[i].name, e1[i].address, e1[i].salary);
    i++;
 }
 fclose(ptr);

 return 0;
}


/*8.WAP to read record of 10 Students(name, rollno, marks) and store in a file “ioe.txt”.
  Print all the record of students who obtained greater or equals to 40 marks.
*/
#include<stdio.h>
#include<stdlib.h>

struct student{
    char name[20];
    int roll, marks;
}s[10];
int main(){
    FILE *fptr = fopen("ioe.txt","w");
    int n, i;
    if(fptr == NULL){
        printf("Error....");
        exit(1);
    }
    printf("How many record you want to add? (max 10): ");
    scanf("%d",&n);
    for(i=0;i<n;i++){
        printf("Student %d\n",i+1);
        printf("Enter the student's name : ");
        scanf("%s",s[i].name);
        printf("Enter the student's roll : ");
        scanf("%d",&s[i].roll);
        printf("Enter the student's marks : ");
        scanf("%d",&s[i].marks);
        fprintf(fptr,"%s %d %d\n",s[i].name, s[i].roll, s[i].marks);
    }
    fclose(fptr);
    fptr = fopen("ioe.txt","r");
    if (fptr == NULL){
        printf("Error...");
        exit(1);
    }
    i = 0;
    while(fscanf(fptr,"%s%d%d\n",s[i].name, &s[i].roll, &s[i].marks) != EOF){
        if(s[i].marks >=40)
        printf("Name = %s\tRoll No. = %d\tMarks = %d\n",s[i].name, s[i].roll, s[i].marks);
        i++;
    }
}